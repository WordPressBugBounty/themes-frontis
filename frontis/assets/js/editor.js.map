{"version":3,"file":"assets/js/editor.js","mappings":"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","sources":["webpack://frontis/webpack/bootstrap","webpack://frontis/webpack/runtime/compat get default export","webpack://frontis/webpack/runtime/define property getters","webpack://frontis/webpack/runtime/hasOwnProperty shorthand","webpack://frontis/external window \"React\"","webpack://frontis/external window [\"wp\",\"editor\"]","webpack://frontis/external window [\"wp\",\"plugins\"]","webpack://frontis/external window [\"wp\",\"components\"]","webpack://frontis/external window [\"wp\",\"data\"]","webpack://frontis/external window [\"wp\",\"coreData\"]","webpack://frontis/external window [\"wp\",\"element\"]","webpack://frontis/external window [\"wp\",\"apiFetch\"]","webpack://frontis/./src/frontend/editor.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"React\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"editor\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"plugins\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"components\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"data\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"coreData\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"element\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"apiFetch\"];","import { PluginSidebar, PluginSidebarMoreMenuItem } from '@wordpress/editor';\nimport { registerPlugin } from '@wordpress/plugins';\nimport { ToggleControl, PanelBody, PanelRow, ColorPalette, Button, Dropdown } from '@wordpress/components';\nimport { useSelect } from '@wordpress/data';\nimport { useEntityProp } from '@wordpress/core-data';\nimport { useState, useEffect } from '@wordpress/element';\nimport apiFetch from '@wordpress/api-fetch';\n\nconst FrontisMetaBox = () => {\n    const postType = useSelect(\n        (select) => select('core/editor').getCurrentPostType(),\n        []\n    );\n\n    const [meta, setMeta] = useEntityProp('postType', postType, 'meta');\n\n    // Fetch global lazy loading setting\n    const [globalLazyLoading, setGlobalLazyLoading] = useState(false);\n    const [globalTransparentHeader, setGlobalTransparentHeader] = useState(false);\n    const [globalStickyHeader, setGlobalStickyHeader] = useState(false);\n\n    const themeColors = useSelect((select) => select('core/editor').getEditorSettings()?.colors || [], []);\n    useEffect(() => {\n        apiFetch({ path: 'frontis/v1/global-settings' }).then((settings) => {\n            setGlobalLazyLoading(settings.lazyLoading);\n            setGlobalTransparentHeader(settings.transparentHeader);\n            setGlobalStickyHeader(settings.stickyHeader);\n        });\n    }, []);\n\n    // Only render for posts and pages\n    if (!['post', 'page'].includes(postType)) {\n        return null;\n    }\n\n    const updateSetting = (settingName, value) => {\n\n        console.log(\"Value using \")\n        console.log(value)\n\n        setMeta({ ...meta, [settingName]: value });\n    };\n\n    // Helper function to get meta value with default false\n    const getMetaValue = (key) => {\n        return meta[key] === undefined ? false : meta[key];\n    };\n\n    return (\n        <>\n            <PluginSidebarMoreMenuItem target=\"frontis-panel\">\n                Frontis\n            </PluginSidebarMoreMenuItem>\n            <PluginSidebar name=\"frontis-panel\" title=\"Frontis\">\n\n                <PanelBody title=\"Disable Elements\">\n                    <PanelRow>\n                        <ToggleControl\n                            label=\"Disable Header\"\n                            checked={getMetaValue('_frontis_meta_header_display')}\n                            onChange={(value) => updateSetting('_frontis_meta_header_display', value)}\n                        />\n                    </PanelRow>\n                    <PanelRow>\n                        <ToggleControl\n                            label=\"Disable Footer\"\n                            checked={getMetaValue('_frontis_meta_footer_display')}\n                            onChange={(value) => updateSetting('_frontis_meta_footer_display', value)}\n                        />\n                    </PanelRow>\n                    <PanelRow>\n                        <ToggleControl\n                            label=\"Disable Page Title\"\n                            checked={getMetaValue('_frontis_meta_site_title_display')}\n                            onChange={(value) => updateSetting('_frontis_meta_site_title_display', value)}\n                        />\n                    </PanelRow>\n                </PanelBody>\n                {!getMetaValue('_frontis_meta_header_display') && (\n                    <PanelBody title='Header Settings'>\n                        <PanelRow>\n                            <ToggleControl\n                                label=\"Disable Sticky Header\"\n                                checked={getMetaValue('_frontis_meta_sticky_header')}\n                                onChange={(value) => updateSetting('_frontis_meta_sticky_header', value)}\n                            />\n                        </PanelRow>\n                        {globalStickyHeader && !getMetaValue('_frontis_meta_sticky_header') && (\n                        <>\n                        <PanelRow>\n                        <div className='sticky-wrapper' style={{\n                                    display: 'flex',\n                                    alignItems: 'center',\n                                    justifyContent: 'space-between',\n                                    width: '100%'\n                                }}>\n                                    <div>\n                                        <span>Sticky Background</span>\n                                    </div>\n                                    <Dropdown\n                                        className=\"fb-transparent-header-bg-dropdown\"\n                                        contentClassName=\"fb-transparent-header-bg-dropdown-content\"\n                                        popoverProps={{ placement: 'bottom-start' }}\n                                        renderToggle={({ isOpen, onToggle }) => (\n                                            <Button\n                                                onClick={onToggle}\n                                                aria-expanded={isOpen}\n                                                className=\"fb-transparent-header-bg-btn\"\n                                            >\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n                                                    <path d=\"M2.66699 14.666H13.3337\" stroke=\"#1C274C\" />\n                                                    <path d=\"M9.25906 2.4426L9.75339 1.94826C10.5724 1.12922 11.9003 1.12922 12.7194 1.94826C13.5384 2.76731 13.5384 4.09524 12.7194 4.91428L12.2251 5.40862M9.25906 2.4426C9.25906 2.4426 9.32079 3.49306 10.2477 4.41994C11.1746 5.34682 12.2251 5.40862 12.2251 5.40862M9.25906 2.4426L4.71437 6.98725C4.40655 7.29505 4.25263 7.44898 4.12027 7.61872C3.96413 7.81885 3.83027 8.03545 3.72104 8.26465C3.62845 8.45892 3.55962 8.66545 3.42196 9.07845L2.83863 10.8285M12.2251 5.40862L7.68039 9.95325C7.37259 10.2611 7.21866 10.415 7.04893 10.5474C6.84879 10.7035 6.63216 10.8374 6.40298 10.9466C6.2087 11.0392 6.00221 11.1081 5.58922 11.2457L3.83922 11.8291M2.83863 10.8285L2.69603 11.2562C2.62829 11.4595 2.68118 11.6835 2.83266 11.835C2.98415 11.9865 3.20821 12.0394 3.41144 11.9716L3.83922 11.8291M2.83863 10.8285L3.83922 11.8291\" stroke=\"#1C274C\" />\n                                                </svg>\n                                            </Button>\n                                        )}\n                                        renderContent={() => (\n                                            <ColorPalette\n                                                colors={themeColors}\n                                                value={getMetaValue('_frontis_meta_sticky_bg_color')}\n                                                // onChange={(value) => updateSetting('_frontis_meta_sticky_bg_color', value)}\n                                                onChange={(value) => updateSetting('_frontis_meta_sticky_bg_color', value || '')}\n                                            />\n                                            \n                                        )}\n                                    />\n                                </div>\n                        </PanelRow>\n                        </>\n                        )}\n                        <PanelRow>\n                            <ToggleControl\n                                label=\"Disable Transparent Header\"\n                                checked={getMetaValue('_frontis_meta_transparent_header')}\n                                onChange={(value) => updateSetting('_frontis_meta_transparent_header', value)}\n                            />\n                        </PanelRow>\n                        {globalTransparentHeader && !getMetaValue('_frontis_meta_transparent_header') && (\n                            <PanelRow>\n                                <div className='transparnet-wrapper' style={{\n                                    display: 'flex',\n                                    alignItems: 'center',\n                                    justifyContent: 'space-between',\n                                    width: '100%'\n                                }}>\n                                    <div>\n                                        <span>Transparent Background</span>\n                                    </div>\n                                    <Dropdown\n                                        className=\"fb-transparent-header-bg-dropdown\"\n                                        contentClassName=\"fb-transparent-header-bg-dropdown-content\"\n                                        popoverProps={{ placement: 'bottom-start' }}\n                                        renderToggle={({ isOpen, onToggle }) => (\n                                            <Button\n                                                onClick={onToggle}\n                                                aria-expanded={isOpen}\n                                                className=\"fb-transparent-header-bg-btn\"\n                                            >\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n                                                    <path d=\"M2.66699 14.666H13.3337\" stroke=\"#1C274C\" />\n                                                    <path d=\"M9.25906 2.4426L9.75339 1.94826C10.5724 1.12922 11.9003 1.12922 12.7194 1.94826C13.5384 2.76731 13.5384 4.09524 12.7194 4.91428L12.2251 5.40862M9.25906 2.4426C9.25906 2.4426 9.32079 3.49306 10.2477 4.41994C11.1746 5.34682 12.2251 5.40862 12.2251 5.40862M9.25906 2.4426L4.71437 6.98725C4.40655 7.29505 4.25263 7.44898 4.12027 7.61872C3.96413 7.81885 3.83027 8.03545 3.72104 8.26465C3.62845 8.45892 3.55962 8.66545 3.42196 9.07845L2.83863 10.8285M12.2251 5.40862L7.68039 9.95325C7.37259 10.2611 7.21866 10.415 7.04893 10.5474C6.84879 10.7035 6.63216 10.8374 6.40298 10.9466C6.2087 11.0392 6.00221 11.1081 5.58922 11.2457L3.83922 11.8291M2.83863 10.8285L2.69603 11.2562C2.62829 11.4595 2.68118 11.6835 2.83266 11.835C2.98415 11.9865 3.20821 12.0394 3.41144 11.9716L3.83922 11.8291M2.83863 10.8285L3.83922 11.8291\" stroke=\"#1C274C\" />\n                                                </svg>\n                                            </Button>\n                                        )}\n                                        renderContent={() => (\n                                            <ColorPalette\n                                                colors={themeColors}\n                                                value={getMetaValue('_frontis_meta_transparent_bg_color')}\n                                                onChange={(value) => updateSetting('_frontis_meta_transparent_bg_color', value || '')}\n                                            />\n                                        )}\n                                    />\n                                </div>\n                            </PanelRow>\n                        )}\n                    </PanelBody>\n                )}\n                {globalLazyLoading && (\n                    <PanelBody title=\"Disable Features\">\n                        <PanelRow>\n                            <ToggleControl\n                                label=\"Disable Lazy Loading\"\n                                checked={getMetaValue('_frontis_meta_lazy_load')}\n                                onChange={(value) => updateSetting('_frontis_meta_lazy_load', value)}\n                            />\n                        </PanelRow>\n                    </PanelBody>\n                )}\n\n\n\n            </PluginSidebar>\n        </>\n    );\n};\n\nif(!window.location.href.includes('canvas=edit')) {\n    registerPlugin('frontis', {\n        icon: (\n            <svg width=\"28\" height=\"32\" viewBox=\"0 0 28 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M23.3358 15.9939L26.5034 17.8551C26.9585 18.1229 27.3364 18.508 27.5992 18.9718C27.862 19.4357 28.0003 19.9618 28.0003 20.4974V22.4684C28.0003 23.0039 27.862 23.5301 27.5992 23.9939C27.3364 24.4577 26.9585 24.8429 26.5034 25.1107L23.3358 26.9718L18.6534 29.7239L15.4798 31.5912C15.0247 31.859 14.5084 32 13.9829 32C13.4573 32 12.941 31.859 12.4859 31.5912L9.31836 29.7239V24.2319L13.9829 26.9779L18.6534 24.2319L23.3179 21.492L18.6534 18.746L13.9829 16L18.6534 13.2479L23.3179 10.508L18.6534 7.76198L13.9829 5.02206L9.31836 2.27605L12.4859 0.408765C12.941 0.140974 13.4573 0 13.9829 0C14.5084 0 15.0247 0.140974 15.4798 0.408765L18.6474 2.27605L23.3059 5.02206L26.4734 6.88935C26.9286 7.15713 27.3065 7.54229 27.5693 8.0061C27.832 8.46992 27.9704 8.99606 27.9704 9.53163V11.4966C27.9704 12.0321 27.832 12.5582 27.5693 13.0221C27.3065 13.4859 26.9286 13.871 26.4734 14.1388L23.3358 15.9939Z\" fill=\"#399CFF\"/>\n                <path d=\"M9.32303 7.7697L4.66451 10.5035V26.9796L1.50293 25.1184C1.04669 24.8514 0.667565 24.4665 0.403713 24.0027C0.139862 23.5388 0.000619462 23.0123 0 22.4761V9.52106C1.33505e-05 8.98549 0.138349 8.45935 0.401119 7.99554C0.663888 7.53172 1.04183 7.14657 1.49695 6.87878L3.16157 5.90242C3.6167 5.63463 4.13298 5.49365 4.65852 5.49365C5.18406 5.49365 5.70034 5.63463 6.15547 5.90242L9.32303 7.7697Z\" fill=\"#399CFF\"/>\n                <path d=\"M18.6502 13.2578L13.9797 16.0038L10.8121 17.8649C10.357 18.1327 9.84069 18.2737 9.31515 18.2737C8.78961 18.2737 8.27333 18.1327 7.8182 17.8649L4.63867 16.0038L9.30318 13.2639L12.4767 11.3966C12.9319 11.1288 13.4481 10.9878 13.9737 10.9878C14.4992 10.9878 15.0155 11.1288 15.4706 11.3966L18.6502 13.2578Z\" fill=\"#399CFF\"/>\n            </svg>\n        ),\n        render: FrontisMetaBox,\n    });\n}"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","window","FrontisMetaBox","postType","useSelect","select","getCurrentPostType","meta","setMeta","useEntityProp","globalLazyLoading","setGlobalLazyLoading","useState","globalTransparentHeader","setGlobalTransparentHeader","globalStickyHeader","setGlobalStickyHeader","themeColors","getEditorSettings","colors","useEffect","apiFetch","path","then","settings","lazyLoading","transparentHeader","stickyHeader","includes","updateSetting","settingName","value","console","log","getMetaValue","undefined","createElement","Fragment","PluginSidebarMoreMenuItem","target","PluginSidebar","name","title","PanelBody","PanelRow","ToggleControl","label","checked","onChange","className","style","display","alignItems","justifyContent","width","Dropdown","contentClassName","popoverProps","placement","renderToggle","isOpen","onToggle","Button","onClick","xmlns","height","viewBox","fill","stroke","renderContent","ColorPalette","location","href","registerPlugin","icon","render"],"sourceRoot":""}